group 'kotlin-in-action'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.4.20'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

repositories {
    mavenLocal()
    mavenCentral()
    google()
    jcenter()
    maven {
        url = uri("https://plugins.gradle.org/m2/")
    }
    maven {
        url "https://maven.springframework.org/release"
    }
    maven {
        url "https://maven.restlet.com"
    }
}

dependencies {
    implementation('org.junit.jupiter:junit-jupiter:5.4.2')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.4.0')
    implementation("org.jetbrains.exposed:exposed-core:0.27.1")
    implementation("org.jetbrains.exposed:exposed-dao:0.27.1")
    implementation("org.jetbrains.exposed:exposed-jdbc:0.27.1")
    implementation("com.h2database:h2:1.4.200")

    //jolt transformation verification
    implementation("org.slf4j:slf4j-api:1.7.30")
    implementation("ch.qos.logback:logback-classic:1.2.3")
    implementation("com.bazaarvoice.jolt:jolt-complete:0.1.1")
    implementation("com.bazaarvoice.jolt:json-utils:0.1.1")
    implementation("com.bazaarvoice.jolt:jolt-core:0.1.1")

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_core"
    compile "junit:junit:4.12"
}

sourceSets {
    main.kotlin.srcDirs += 'src'

}
test {
    useJUnitPlatform()
}

task printSourceSetInformation() {
    doLast {
        sourceSets.each { srcSet ->
            println "[" + srcSet.name + "]"
            print "-->Source directories: " + srcSet.allJava.srcDirs + "\n"
            print "-->Output directories: " + srcSet.output.classesDirs.files + "\n"
            print "-->Compile classpath:\n"
            srcSet.compileClasspath.files.each {
                print "  " + it.path + "\n"
            }
            println ""
        }
    }
}